@page "/"
@using BlazorGroupB.Data
@using BlazorGroupB.Data.DAO;
@using BlazorGroupB.Models
@using System.Text
@using Microsoft.EntityFrameworkCore
@using System.Configuration
@using Npgsql
@using System.Data
@using System.Diagnostics
@inject BlazorGroupBDbContext _contextThread
@inject NavigationManager NaviManager

@if (Ths != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>ThreadID</th>
                <th>ThreadName</th>

            </tr>
        </thead>

        <tbody>
            @foreach (var item in Ths)
            {
                <tr>

                    <td>@item.ThreadID</td>
                    <td><a href="/ThreadPage/@item.ThreadID">@item.ThreadName</a> </td>

                </tr>
            }
        </tbody>
    </table>
}
else
{
    <div class="text-primary">No-Data...</div>
}


<EditForm Model="@th" OnSubmit="OnCreateThread">
    <div class="form-group">
        <label asp-for="th.ThreadName" class="control-label"></label>
        <input asp-for="th.ThreadName" class="form-control" @bind-value=@th.ThreadName />
    </div>
    <button class="btn btn-primary">thread作成</button>
</EditForm>

@code {
    private List<Threads> Ths { get; set; }
    private Threads th = new Threads();

    private NpgsqlConnection conn = null;
    private ThreadsDao dao;

    private async void OnCreateThread()
    {

        //  作成時刻を追加する
        DateTime dt = DateTime.Now;
        th.ThreadCreateDate = dt;

        //  ユーザーIDを追加する
        th.UserID = "匿名";

        //  スレッドを作成する
        int number = dao.Insert(th);

        // //  そのurlにジャンプする
        string url = "/ThreadPage/" + number.ToString();
        NaviManager.NavigateTo(url);

    }

    /// <summary>
    /// 開かれたら最初に起動される
    /// </summary>
    /// <returns></returns>
    protected override async Task OnInitializedAsync()
    {
        //  データベースからデータを取り出す
        Ths = await _contextThread.Threads.ToListAsync<Threads>();
        daoConnection();

    }
    private void daoConnection()
    {

        var builder = new NpgsqlConnectionStringBuilder
        {
            Host = "localhost",
            Database = "test",
            Username = "postgres",
            Password = "postgres"
        };

        conn = new NpgsqlConnection(
        builder.ConnectionString);

        // conn = new NpgsqlConnection(
        // ConfigurationManager.ConnectionStrings
        // ["PosgreConnection"].ConnectionString);

        dao = new ThreadsDao(conn);
    }

}
